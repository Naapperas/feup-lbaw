openapi: 3.0.0

info:
  version: "1.0"
  title: "LBAW Atrellado Web API"
  description: "Web Resources Specification (A7) for Atrellado"

servers:
  - url: http://lbaw2265.lbaw.fe.up.pt
    description: Production server

externalDocs:
  description: Find more info here.
  url: https://git.fe.up.pt/lbaw/lbaw2223/lbaw2265/-/wikis/eap#a7-web-resources-specification # TODO: change this

tags:
  - name: "M01: Authentication and User Profile"
  - name: "M02: User Administration/Static pages"
  - name: "M03: Projects"
  - name: "M04: Project Forum"
  - name: "M05: Search"

paths:
  /:
    get:
      operationId: R001
      summary: "R001: Home page"
      description: "Provides the home page.
        If the user is authenticated, the projects that the user has marked as favorite or the projects in which the user is a member should appear in this page.
        If not, a static page with links to sign-in/sign-up is presented.
        Access: PUB"

      tags:
        - "M01" # TODO: find new module

      responses:
        "200":
          description: "Ok. Show Home page"

  /login:
    get:
      operationId: R101
      summary: "R101: Login Form"
      description: "Provide login form. Access: PUB"
      tags:
        - "M01"
      responses:
        "200":
          description: "Ok, Show Log-in UI"

    post:
      operationId: R102
      summary: "R102: Login action"
      description: "Process the login form data. Access: PUB"
      tags:
        - "M01"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password

      responses:
        "302":
          description: "See Other. Redirect after processing the login credentials."
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Successful authentication: redirecting to home page"
                  value: "/"
                302Error:
                  description: "Failed to authenticate user, going back to login page"
                  value: "/login"

  /logout:
    post:
      operationId: R103
      summary: "R103: Logout Action"
      description: "Logout the current authenticated user. Access: USR, ADM"
      tags:
        - "M01"
      responses:
        "302":
          description: "Redirect after processing logout."
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Successful logout. Redirect to login form."
                  value: "/"

  /register:
    get:
      operationId: R104
      summary: "R104: Register Form"
      description: "Provide new user registration form. Access: PUB"
      tags:
        - "M01"
      responses:
        "200":
          description: "Ok. Show Sign-Up UI"

    post:
      operationId: R105
      summary: "R105: Register Action"
      description: "Processes the user registration form data. Access: PUB"
      tags:
        - "M01"

      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                picture:
                  type: string
                  format: binary
                password:
                  type: string
              required:
                - name
                - email
                - password

      responses:
        "302":
          description: "Redirect after processing the new user information."
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Successful account creation. Redirect to user profile."
                  value: "/"
                302Failure:
                  description: "Failed user creation. Redirect to register form."
                  value: "/register"

  /user/{id}:
    get:
      operationId: R201
      summary: "R201: View user profile"
      description: "Show the individual user profile. Access: USR, ADM"
      tags:
        - "M01"
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        "200":
          description: "Ok. Show user profile UI."
        "403":
          description: "Forbidden. The current user cannot access this profile."
        "404":
          description: "Not Found. User with the given id not found."

  /user/{id}/edit:
    get:
      operationId: R202
      summary: "R202: Edit user profile page"
      description: "Show the 'Edit Profile' page. Access: OWN, ADM"
      tags:
        - "M01"

      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true

      responses:
        "200":
          description: "Ok. Show Edit User profile UI"
        "403":
          description: "Forbidden. The current user cannot edit this profile."
        "404":
          description: "Not Found. User with the given id not found."

    post:
      operationId: R203
      summary: "R203: Edit user profile action"
      description: "Process the 'Edit Profile' form data. Access: OWN, ADM"

      tags:
        - "M01"

      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true

      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                picture:
                  type: string
                  format: binary
              required:
                - name
                - email

      responses:
        "302":
          description: "Redirect after processing the edited user information."
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Successful edit. Redirect to user profile."
                  value: "/user/{id}"
                302Failure:
                  description: "Failed edit. Redirect to edit form."
                  value: "/user{id}/edit"

  /project/{id}:
    get:
      operationId: R301
      summary: "R301: View project main page"
      description: "Show the specified project main page (Project Board). Access: MBR, ADM"

      tags:
        - "M03"

      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true

      responses:
        "200":
          description: "Ok. Show project board UI"
        "403":
          description: "Forbidden. The current user cannot access the project."
        "404":
          description: "Not Found. No project with the given id exists."

  /project/new:
    get:
      operationId: R302
      summary: "R302: Create New Project form"
      description: "Show the 'Create New Project' UI. Access: USR"

      tags:
        - "M03"

      responses:
        "200":
          description: "Ok. Show the 'Create New Project' UI"

    post:
      operationId: R303
      summary: "R303: Create new project action"
      description: "Process the 'Create New Project' form data. Access: USR"

      tags:
        - "M03"

      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
              required:
                - name

      responses:
        "302":
          description: "Redirect after processing the new project information."
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Successful project creation. Redirect to project board."
                  value: "/project/{id}"
                302Failure:
                  description: "Failed project creation. Redirect to project creation form."
                  value: "/project/new"

  /project/{id}/info:
    get:
      operationId: R302
      summary: "R302: View project info page"
      description: "Show the specified project info page. Access: MBR, COORD"
      tags:
        - "M03"
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        "200":
          description: "Ok. Show project info page UI"

  /project/{id}/task/new:
    get:
      operationId: R401
      summary: "R401: 'Create New Task' UI"
      description: "Show the task creation UI. Access: MBR"

      tags:
        - "M03"

      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true

      responses:
        "200":
          description: "Ok. Show the Task creation UI"
        "403":
          description: "Forbidden. The current user can't create a task on the given project"
        "404":
          description: "Not Found. The given project does not exist"

    post:
      operationId: R402
      summary: "R402: 'Create New Task' action"
      description: "Process the 'Create New Task' form data. Access: MBR"

      tags:
        - "M03"

      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true

      responses:
        "302":
          description: "Redirect after processing the new project information."
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: "Successful task creation. Redirect to project board."
                  value: "/project/{id}"
                302Failure:
                  description: "Failed task creation. Redirect to task creation form."
                  value: "/project/{id}/task/new"

  /project/{id}/task/{taskId}:
    get:
      operationId: R403
      summary: "R403: View a task in project page"
      description: "Show the specified task and its details in the project page. Access: MBR, ADM"

      tags:
        - "M03"

      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
        - in: path
          name: taskId
          schema:
            type: integer
          required: true

      responses:
        "200":
          description: "Ok. Show task UI"
        "403":
          description: "Forbidden. The current user does not have permission to access this task or project"
        "404":
          description: "Not Found. Project or task with the given id not found"

  /admin:
    get:
      operationId: R301
      responses:
        "200":
          description: "Ok."

  /api:
    get:
      operationId: R401
      description: "API health check endpoint"
      responses:
        "200":
          description: "Ok. API healthy"
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
              examples:
                200Success:
                  value:
                    ok: true

  /api/user:
    get:
      operationId: R402
      summary: "R402: Get Users API Endpoint"
      description: "Get users. Access: MBR, ADM"

      tags:
        - "M03"

      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          required: false

      responses:
        "200":
          description: "Ok. Return as JSON data the users that the user that created the request has permission to access, or all users if the request is made by an admin"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    password:
                      type: string
                      format: password
                    blocked:
                      type: boolean
                    is_admin:
                      type: boolean

  /api/user/{id}:
    get:
      operationId: R403
      summary: "R403: Fetch User By Id API Endpoint"
      description: "Returns the specified user. MBR, ADM."

      tags:
        - "Mo3"

      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true

      responses:
        "200":
          description: "Ok. Returns the user specified by the given id as JSON data."
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  password:
                    type: string
                    format: password
                  blocked:
                    type: boolean
                  is_admin:
                    type: boolean
        "403":
          description: "Forbidden. The user that made the request foes not have permission to access the specified user information."
        "404":
          description: "Not Found. The specified user does not exist or could not be found"

    put:
      operationId: R404
      summary: "R404: Edit User Profile"
      description: "Edit a specific users profile information. Access: OWN, ADM"

      tags:
        - "M03"

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
                  format: password
              required:
                - name
                - password

      responses:
        "200":
          description: "Ok. User Profile edited successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  password:
                    type: string
                    format: password
                  blocked:
                    type: boolean
                  is_admin:
                    type: boolean
        "400":
          description: "Bad request. The request body contains invalid data."
        "403":
          description: "Forbidden. The user that created the request does not have permission to edit the specified user"

  /api/project:
    get:
      operationId: R405
      summary: "R405: Project Fetch API Endpoint"
      description: "Fetch projects from the Database. Access: MBR, ADM"

      tags:
        - M03

      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          required: false

      responses:
        "200":
          description: "Ok. Return the projects that the user is a member of, or all the projects if the user is an admin"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    description:
                      type: string
                    creation_date:
                      type: string
                      format: date
                    last_modification_date:
                      type: string
                      format: date
                    archived:
                      type: boolean
                    coordinator:
                      type: integer

    post:
      operationId: R406
      summary: "R406: Project creation API Endpoint"
      description: "Endpoint for creation new projects. Access: USR, ADM"

      tags:
        - M03

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
              required:
                - name

      responses:
        "200":
          description: "Ok. New project created successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  description:
                    type: string
                  creation_date:
                    type: string
                    format: date
                  last_modification_date:
                    type: string
                    format: date
                  archived:
                    type: boolean
                  coordinator:
                    type: integer

        "400":
          description: "Bad request. The request body contains invalid data."
        "403":
          description: "Forbidden. The user that made the request cannot create a task with the given request body."

  /api/project/{id}:
    get:
      operationId: R407
      summary: "R407: Get Project By ID API Endpoint"
      description: "Fetch a project by id. Access: MBR, ADM"

      tags:
        - M03

      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true

      responses:
        "200":
          description: "Ok. Return project as JSON data"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  description:
                    type: string
                  creation_date:
                    type: string
                    format: date
                  last_modification_date:
                    type: string
                    format: date
                  archived:
                    type: boolean
                  coordinator:
                    type: integer
        
        "403":
          description: "Forbidden. The given project is not accessible by the user that created the request"
        
        "404":
          description: "Not Found. The given project does not exist or could not be found"

  /api/task:
    get:
      operationId: R408
      summary: "R408: Search Tasks API"
      description: "Searches for tasks and returns the results as JSON. Access: MBR, ADM."

      tags:
        - "M03"

      parameters:
        - in: query
          name: query
          description: String to use for full-text search
          schema:
            type: string
          required: false
        - in: query
          name: limit
          description: Number of tasks to return
          schema:
            type: integer
          required: false

      responses:
        "200":
          description: "Ok. Return all tasks that the user can see, or all tasks if the user is an admin"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    description:
                      type: string
                    creation_date:
                      type: string
                      format: date
                    edit_date:
                      type: string
                      format: date
                    state:
                      type: string
                    creator:
                      type: integer
                    position:
                      type: integer
                    task_group:
                      type: integer

    post:
      operationId: R409
      summary: "R409: Create Task API Endpoint"
      description: "Create a new task. Access: MBR."

      tags:
        - "M03"

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                state:
                  type: string
                  default: CREATED
                position:
                  type: integer
                task_group:
                  type: integer
              required:
                - name
                - task_group
                - position

      responses:
        "200":
          description: "Ok. Task created successfully."
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  creation_date:
                    type: string
                    format: date
                  edit_date:
                    type: string
                    format: date
                  state:
                    type: string
                  creator:
                    type: integer
                  position:
                    type: integer
                  task_group:
                    type: integer

        "400":
          description: "Bad request. The request body contains invalid data."

        "403":
          description: "Forbidden. The user that made the request cannot create a task with the given request body."

  /api/task/{id}:
    get:
      operationId: R410
      summary: "R410: Get Task By Id API Endpoint"
      description: "Fetch a Task by its id and return it as JSON data. Access: MBR, ADM."

      tags:
        - "M03"

      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true

      responses:
        "200":
          description: "Ok. Returns specified task"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  creation_date:
                    type: string
                    format: date
                  edit_date:
                    type: string
                    format: date
                  state:
                    type: string
                  creator:
                    type: integer
                  position:
                    type: integer
                  task_group:
                    type: integer
        "403":
          description: "Forbidden. The user that made the request does not have permission to fetch this Task"
        "404":
          description: "Not Found. The specified task does not exist or could not be found"

  /api/task/{id}/complete:
    put:
      operationId: R411
      summary: "R411: Complete Task"
      description: "Mark a given task as completed. Access: MBR."

      tags:
        - "M03"

      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true

      responses:
        "200":
          description: "Ok. Task has successfully been marked as completed."
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  creation_date:
                    type: string
                    format: date
                  edit_date:
                    type: string
                    format: date
                  state:
                    type: string
                    example: COMPLETED
                  creator:
                    type: integer
                  position:
                    type: integer
                  task_group:
                    type: integer
        "403":
          description: "Forbidden. The user that made the request does not have permission to marl this task as completed."
        "404":
          description: "Not Found. THe given task does not exist or could not be found."

  /api/group:
    get:
      operationId: R412
      summary: "R412: Task Group Fetch API Endpoint"
      description: "Fetch task groups. Access: MBR, ADM."

      tags:
        - "M03"

      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          required: false

      responses:
        "200":
          description: "Ok. Task groups that the user has access to, or all task groups if the user is an admin."
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    description:
                      type: string
                    creation_date:
                      type: string
                      format: date
                    project:
                      type: integer
                    position:
                      type: integer

    post:
      operationId: R413
      summary: "R413: Create group"
      description: "Process the 'Create Group' form data. Access: MBR, COORD"

      tags:
        - "M03"

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                project:
                  type: integer
                position:
                  type: integer
              required:
                - name
                - project
                - position

      responses:
        "200":
          description: "Ok. Task Group created successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  creation_date:
                    type: string
                    format: date
                  project:
                    type: integer
                  position:
                    type: integer
        "400":
          description: "Bad request. The request body contains invalid data."
        "403":
          description: "Forbidden. The user that made the request cannot create a task group with the given request body."

  /api/groups/{id}:
    get:
      operationId: R414
      summary: "R414: Get Task Group By Id API Endpoint"
      description: "Fetch a task group by its id. Access: MBR, ADM"

      tags:
        - M03

      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true

      responses:
        "200":
          description: "Ok. Returns the fetched task group as JSON data"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  creation_date:
                    type: string
                    format: date
                  project:
                    type: integer
                  position:
                    type: integer
        "403":
          description: "Forbidden. The user that made the request does not have permission to fetch this Task"
        "404":
          description: "Not Found. The task group does not exist or could not be found"
